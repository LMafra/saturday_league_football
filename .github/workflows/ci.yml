name: CI

on:
  pull_request:
  push:
    branches: [main]

env:
  RAILS_ENV: test
  NODE_ENV: test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password
  POSTGRES_DB: saturday_league_football_test
  DATABASE_URL: postgres://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@localhost:5432/${{ env.POSTGRES_DB }}
  REDIS_URL: redis://localhost:6379/1

jobs:
  rubocop:
    name: Lint with RuboCop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - run: bin/rubocop -f github

  setup:
    name: Setup and Tests
    runs-on: ubuntu-latest
    needs: rubocop
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U ${{ env.POSTGRES_USER }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7
        ports: ["6379:6379"]
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libvips libjemalloc2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'yarn'

      - name: Install JavaScript dependencies
        run: yarn install --frozen-lockfile

      - name: Wait for services
        run: |
          ./scripts/wait-for-services.sh

      - name: Setup database
        run: |
          bin/rails db:test:prepare

      - name: Run RSpec
        run: bundle exec rspec
        env:
          SIMPLECOV: true

      - name: Upload test artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            coverage/
            tmp/screenshots/
            tmp/test-results.xml
          retention-days: 3