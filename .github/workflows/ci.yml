name: CI

on:
  pull_request:
  push:
    branches: [main]

env:
  RAILS_ENV: test
  NODE_ENV: test
  # Only define non-sensitive values here
  DATABASE_NAME: saturday_league_football_test

jobs:
  rubocop:
    name: Lint with RuboCop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - run: bin/rubocop -f github

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: rubocop
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres  # Hardcoded to match docker-compose
          POSTGRES_PASSWORD: password
          POSTGRES_DB: saturday_league_football_test
        ports:
          - "5432:5432"
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7
        ports:
          - "6379:6379"
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgres://postgres:password@localhost:5432/saturday_league_football_test
      REDIS_URL: redis://localhost:6379/1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libvips libjemalloc2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'npm'

      - name: Install JavaScript dependencies
        run: npm ci

      - name: Wait for PostgreSQL
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5432 -U postgres && break || sleep 5
          done

      - name: Setup database
        run: |
          bin/rails db:create db:schema:load test:prepare

      - name: Run RSpec
        run: bundle exec rspec
        env:
          SIMPLECOV: true

      - name: Upload test artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            coverage/
            tmp/screenshots/
            tmp/test-results.xml
          retention-days: 3